buildscript {
    repositories {
    	maven { url  = 'https://plugins.gradle.org/m2/' }
        maven { url = 'https://maven.parchmentmc.org' }
    }
    dependencies {
    }
}

plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id 'com.matthewprenger.cursegradle' version '1.4.0'
    id "com.modrinth.minotaur" version "2.+"
}

import groovy.json.JsonSlurper
import groovy.json.JsonOutput
import com.modrinth.minotaur.dependencies.ModDependency

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url 'https://dl.cloudsmith.io/public/azuredoom-mods/azurelib/maven/' }
    maven { url 'https://maven.blamejared.com' }
    maven { url 'https://api.modrinth.com/maven' }
	maven { url "https://cfa2.cursemaven.com" }
    maven { url "https://maven.cloudsmith.io/azuredoom-mods/azurelib/" }
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/" }
	maven { url "https://maven.terraformersmc.com/releases" } // modmenu
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	//modImplementation "com.terraformersmc:modmenu:7.2.1"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "AzureLib",
                "Specification-Vendor"    : "AzureDoom",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.mod_version,
                "Implementation-Vendor"   : "AzureDoom",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

processResources {
    inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

loom {
	accessWidenerPath = file("src/main/resources/azurelib.aw")
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
    from "LICENSE"
}

publishing {
    publications {
        mavenJava(MavenPublication) {
			from components.java
            artifactId = project.archives_base_name
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

publishing {
  repositories {
    maven {
      name = "azurelib"
      url = "https://libs.azuredoom.com:4443/mods"
      credentials(PasswordCredentials)
      authentication {
        basic(BasicAuthentication)
      }
    }
  }
  publications {
    maven(MavenPublication) {
      groupId = project.maven_group
      artifactId = project.mod_version
      version = project.archives_base_name
      from components.java
    }
  }
}

processResources {
	doLast {
        def jsonMinifyStart = System.currentTimeMillis()
        def jsonMinified = 0
        def jsonBytesSaved = 0
        fileTree(dir: outputs.files.asPath, include: '**/*.json').each { 
            File file = it
            jsonMinified++
            def oldLength = file.length()
            file.text = JsonOutput.toJson(new JsonSlurper().parse(file))
            jsonBytesSaved += oldLength - file.length()
        }
        println('Minified ' + jsonMinified + ' json files. Saved ' + jsonBytesSaved + ' bytes. Took ' + (System.currentTimeMillis() - jsonMinifyStart) + 'ms.')
    }
}

if (file('key.properties').exists()) {
    curseforge {

    def curseProp = new Properties()
    File secretPropsFile = file("key.properties")
    curseProp.load(secretPropsFile.newInputStream())

    project {
        apiKey = curseProp.getProperty('curseKey')
        id = "817423"
        releaseType = "alpha"
        changelogType = 'text'
        changelog = file('changelog.txt')
		addGameVersion("1.20.2-Snapshot")
        addGameVersion("Fabric")
        addGameVersion("Java 17")

        relations {
            requiredDependency 'fabric-api'      
        }
        mainArtifact(remapJar)

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }
    options {
    	//debug = true
        forgeGradleIntegration = false
    }
   }
}

if (file('key.properties').exists()) {
	modrinth {
		def modrinthProp = new Properties()
		File secretPropsFile = file("key.properties")
		modrinthProp.load(secretPropsFile.newInputStream())
		
		token = modrinthProp.getProperty('modrinthKey')
		projectId = '7zlUOZvb' 
		versionNumber = project.mod_version 
		uploadFile = remapJar 
		changelog = rootProject.file("changelog.txt").text
		gameVersions = ['1.20.1']
		versionType = "release"
		loaders = ['fabric', 'quilt']
		dependencies { 
        	required.project "fabric-api"
   		}
	}
}