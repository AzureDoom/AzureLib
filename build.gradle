plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT' apply(false)
    id 'org.spongepowered.gradle.vanilla' version '0.2.1-SNAPSHOT' apply(false)
    id 'org.spongepowered.mixin' version '0.7-SNAPSHOT' apply(false)
    id 'me.modmuss50.mod-publish-plugin' version '0.4.0' apply(false)
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
}

subprojects {
    apply plugin: 'java'

    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    java.withSourcesJar()
    java.withJavadocJar()

    jar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
        manifest {
            attributes([
                    "Specification-Title"     : "AzureLib",
                    "Specification-Vendor"    : "AzureDoom",
                    "Specification-Version"   : "1", // We are version 1 of ourselves
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.mod_version,
                    "Implementation-Vendor"   : "AzureDoom",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
            ])
        }
    }

    sourcesJar {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${mod_name}" }
        }
    }

    repositories {
        mavenCentral()
        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }
        maven {
            name = 'BlameJared Maven (JEI / CraftTweaker / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }
    }

    tasks.withType(JavaCompile).configureEach {

        it.options.encoding = 'UTF-8'
        it.options.getRelease().set(17)
    }

    processResources {
        def expandProps = [
                "version"                   : version,
                "group"                     : project.group, //Else we target the task's group.
                "minecraft_version"         : minecraft_version,
                "forge_version"             : neo_version,
                "forge_loader_version_range": neo_version_range,
                "forge_version_range"       : loader_version_range,
                "minecraft_version_range"   : minecraft_version_range,
                "fabric_version"            : fabric_version,
                "fabric_loader_version"     : fabric_loader_version,
                "mod_name"                  : mod_name,
                "mod_author"                : mod_author,
                "mod_id"                    : mod_id,
                "license"                   : mod_license,
                "description"               : project.mod_description
        ]

        filesMatching(['pack.mcmeta', 'fabric.mod.json', '*.mixins.json']) {
            expand expandProps
        }
        inputs.properties(expandProps)
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata).configureEach {

        enabled = false
    }

    // Tells gradle to show 1000 errors instead of the default count of 100.
    // See: https://stackoverflow.com/a/31905248
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xmaxerrs" << "1000"
        }
    }
}